<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Theme Yuki</title>
    <link>https://handong1216.github.io/</link>
    <description>Recent content on Hugo Theme Yuki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Dec 2019 19:51:20 +0800</lastBuildDate>
    
	<atom:link href="https://handong1216.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据结构笔记记录</title>
      <link>https://handong1216.github.io/post/datastructure0/</link>
      <pubDate>Sat, 28 Dec 2019 23:23:27 +0800</pubDate>
      
      <guid>https://handong1216.github.io/post/datastructure0/</guid>
      <description>从零开始数据结构进行中。。。</description>
    </item>
    
    <item>
      <title>线性结构和非线性结构</title>
      <link>https://handong1216.github.io/post/datastructure01/</link>
      <pubDate>Sat, 28 Dec 2019 23:23:27 +0800</pubDate>
      
      <guid>https://handong1216.github.io/post/datastructure01/</guid>
      <description>数据结构包括两个部分：线性结构、非线性结构。
线性结构  1.线性结构是最常用的数据结构，其特点是数据元素之间存在一对一的线性关系。
2.线性结构有两种不同的存储结构，即顺序存储结构和链式存储结构。
顺序存储的线性表称为顺序表，顺序表中的存储元素（地址）是连续的。
链式存储的线性表称为链表，链表中的存储元素（地址）不一定是连续的，元素节点中存放数据元素以及相邻元素的地址信息。
3.线性结构常见的有：数组、队列、链表、栈。
非线性结构  1.非线性结构包括：二维数组、多维数组、广义表、树结构、图结构。</description>
    </item>
    
    <item>
      <title>稀疏数组</title>
      <link>https://handong1216.github.io/post/datastructure02/</link>
      <pubDate>Sun, 29 Dec 2019 18:55:20 +0800</pubDate>
      
      <guid>https://handong1216.github.io/post/datastructure02/</guid>
      <description>基本介绍  1.使用场景：
当一个数组中大部分元素为空或者为同一个值时，可以使用稀疏数组来保存该数组。
2、处理方法：
记录数组一共有几行几列，有多少个不同的值。
把具有不同值的元素的行、列、值分别记录在一个小规模的数组中，从而缩小程序的规模。
示例  使用棋盘来表示二维数组，1表示黑子，2表示蓝子
原始二维数组： 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 转换为稀疏数组：稀疏数组的第一列为行（row），第二列为列（col），第三列为值（val） 9 11 2 # 第一行记录总值：9表示共有9行，11表示共有11列，2表示共有2个不同的值 1 2 1 # 第二行第三列的值为1 2 3 2 # 第三行第四列的值为2 </description>
    </item>
    
    <item>
      <title>队列</title>
      <link>https://handong1216.github.io/post/datastructure03/</link>
      <pubDate>Sun, 29 Dec 2019 19:51:20 +0800</pubDate>
      
      <guid>https://handong1216.github.io/post/datastructure03/</guid>
      <description>基本介绍  1.队列是一个有序列表，可以用数组或是链表来实现。
2.遵循先进先出原则。</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://handong1216.github.io/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://handong1216.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://handong1216.github.io/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/▾ images/logo.png should become
▾ &amp;lt;root&amp;gt;/▾ static/▾ images/logo.png Additionally, you&#39;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://handong1216.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/▾ images/logo.png should become
▾ &amp;lt;root&amp;gt;/▾ static/▾ images/logo.png Additionally, you&#39;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Création d&#39;un nouveau thème</title>
      <link>https://handong1216.github.io/post/creation-dun-nouveau-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/creation-dun-nouveau-theme/</guid>
      <description>Introduction Ce tutoriel vous montrera comment créer un thème simple pour Hugo. Je suppose que vous êtes familier avec HTML, la ligne de commande bash, et que vous êtes à l&#39;aise avec Markdown pour formater le contenu. Je vais expliquer comment Hugo utilise des modèles et comment vous pouvez organiser vos modèles pour créer un thème. Je ne couvrirai pas l&#39;utilisation de CSS pour styliser votre thème.
Nous allons commencer par créer un nouveau site avec un modèle très basique.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://handong1216.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/about/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
 https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>About Hugo</title>
      <link>https://handong1216.github.io/pages/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/pages/about/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
 https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://handong1216.github.io/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://handong1216.github.io/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Débuter avec Hugo</title>
      <link>https://handong1216.github.io/post/debuter-avec-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/debuter-avec-hugo/</guid>
      <description>&lt;h2 id=&#34;tape-1-installer-hugo&#34;&gt;Étape 1. Installer Hugo&lt;/h2&gt;
&lt;p&gt;Allez sur la page de téléchargements de
&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo&lt;/a&gt; et téléchargez la version
appropriée à votre système d&#39;exploitation et votre architecture.&lt;/p&gt;
&lt;p&gt;Sauvegardez le fichier téléchargé à un endroit précis, afin de l&#39;utiliser dans
l&#39;étape suivante.&lt;/p&gt;
&lt;p&gt;Des informations plus complètes sont disponibles sur la page
&lt;a href=&#34;https://handong1216.github.io/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://handong1216.github.io/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://handong1216.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Introduction aux modèles (Hu)go</title>
      <link>https://handong1216.github.io/post/introduction-aux-modeles-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/introduction-aux-modeles-hugo/</guid>
      <description>Hugo utilise l&#39;excellente librairie go html/template pour son moteur de modèles. c&#39;est un moteur extrêmement léger qui offre un très petit nombre de fonctions logiques. À notre expérience, c&#39;est juste ce qu&#39;il faut pour créer un bon site web statique. Si vous avez déjà utilisé d&#39;autre moteurs de modèles pour différents langages ou frameworks, vous allez retrouver beaucoup de similitudes avec les modèles go.
Ce document est une introduction sur l&#39;utilisation de Go templates.</description>
    </item>
    
    <item>
      <title>Migrer vers Hugo depuis Jekyll</title>
      <link>https://handong1216.github.io/post/migrer-vers-hugo-depuis-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://handong1216.github.io/post/migrer-vers-hugo-depuis-jekyll/</guid>
      <description>&lt;h2 id=&#34;dplacez-le-contenu-statique-vers-static&#34;&gt;Déplacez le contenu statique vers &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Jekyll a une règle comme quoi tout répertoire qui ne commence pas par &lt;code&gt;_&lt;/code&gt; sera
copié tel-quel dans le répertoire &lt;code&gt;_site&lt;/code&gt;. Hugo garde tout le contenu statique
dans le répertoire &lt;code&gt;static&lt;/code&gt;. Vous devez donc déplacer tout ce type de contenu
là-dedans. Avec Jekylll, l&#39;arborescence ressemblant à ceci :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>